# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the production branch
#   push:
#     branches: [ production ]
#   pull_request:
#     branches: [ production ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE (along with submodules), so your job can access it
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           submodules: true  # Fetch Hugo themes
#           fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

#       # Sets up the Hugo framework
#       - name: setup hugo
#         uses: peaceiris/actions-hugo@v2.4.13
#         with:
#           # The Hugo version to download (if necessary) and use. Example: 0.58.2
#           # hugo-version: # optional, default is latest
#           # Download (if necessary) and use Hugo extended version. Example: true
#           extended: true # optional, default is false

#       # Builds the site
#       - name: Build Hugo site
#         working-directory: ./site
#         run: |
#           hugo -e production
          
#       # Install lftp
#       - name: Install lftp
#         run: |
#           sudo apt install lftp
          
#       # Transfers site to serverr via FTP
#       - name: Transfer to server
#         working-directory: ./build
#         run: |
#           HOST=${{ secrets.FABLEARN_HOST }}
#           USER=${{ secrets.FABLEARN_USER }}
#           PASS=${{ secrets.FABLEARN_PASSWORD }}
#           TARGETFOLDER='/'
#           SOURCEFOLDER='.'

#           lftp -f "
#           set ssl:verify-certificate false
#           open $HOST
#           user $USER $PASS
#           mirror --reverse --verbose $SOURCEFOLDER $TARGETFOLDER
#           bye
#           "
